# Default values for pg-zalando.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#imagePullSecrets: regcred
nameOverride: ""
fullnameOverride: ""

image:
  private_repository: false

  connect:
    repository: "registry.bare.pandrosion.org/edp/data/data-devops/utility-images/cp-server-connect"
    # Overrides the image tag whose default is the chart appVersion.
    tag: 7.3.0

  kafka:
    repository: "registry.bare.pandrosion.org/edp/data/data-devops/utility-images/cp-server"
    # Overrides the image tag whose default is the chart appVersion.
    tag: 7.3.0

  ksql:
    repository: "registry.bare.pandrosion.org/edp/data/data-devops/utility-images/cp-ksqldb-server"
    # Overrides the image tag whose default is the chart appVersion.
    tag: 7.3.0

  schemaregistry:
    repository: "registry.bare.pandrosion.org/edp/data/data-devops/utility-images/cp-schema-registry"
    # Overrides the image tag whose default is the chart appVersion.
    tag: 7.3.0

  zookeeper:
    repository: "registry.bare.pandrosion.org/edp/data/data-devops/utility-images/cp-zookeeper"
    # Overrides the image tag whose default is the chart appVersion.
    tag: 7.3.0

  c3:
    repository: "registry.bare.pandrosion.org/edp/data/data-devops/utility-images/cp-enterprise-control-center"
    # Overrides the image tag whose default is the chart appVersion.
    tag: 7.3.0

  kafka-rest:
    repository: "registry.bare.pandrosion.org/edp/data/data-devops/utility-images/cp-kafka-rest"
    # Overrides the image tag whose default is the chart appVersion.
    tag: 7.3.0

  replicator:
    repository: "registry.bare.pandrosion.org/edp/data/data-devops/utility-images/cp-enterprise-replicator"
    # Overrides the image tag whose default is the chart appVersion.
    tag: 7.3.0

  init:
    repository: "registry.bare.pandrosion.org/edp/data/data-devops/utility-images/confluent-init-container"
    # Overrides the image tag whose default is the chart appVersion.
    tag: 2.5.0



serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

kafka:
  enabled: true
  tls:
    enabled: false
  oneReplicaPerNode: false
  resources:
    requests:
      cpu: 500m
      memory: 500Mi
    limits:
      cpu: 1500m
      memory: 1500Mi
  replicas: 3
  dataVolumeCapacity: 2Gi
  configOverrides:
    server:
      - auto.create.topics.enable=true
      - default.replication.factor=3
      - min.insync.replicas=2
    jvm:
      - "-Xmx6g"
      - "-XX:MetaspaceSize=96m"
      - "-XX:+UseG1GC"
    log4j:
      - log4j.rootLogger=INFO, stdout
  enterpriseEdition: false
  Monitor:
    enabled: true
    telemetryPath: /metrics
    # Set the namespace the ServiceMonitor should be deployed
    #namespace: default 
    # Set how frequently Prometheus should scrape
    interval: 30s
    # Set labels for the ServiceMonitor, use this to define your scrape label for Prometheus Operator
    labels:
      Release: prometheus-operator 
        # Set timeout for scrape
    # timeout: 10s
control_center:
  enabled: false #not supported at the momemnt
  tls:
    enabled: false
  resources:
    requests:
      cpu: 1500m
      memory: 2000Mi
    limits:
      cpu: 1500m
      memory: 2000Mi
  replicas: 1
  dataVolumeCapacity: 2Gi
  enterpriseEdition: false
ksql_db:
  enabled: false
  tls:
    enabled: false
  resources:
    requests:
      cpu: 500m
      memory: 1500Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  replicas: 1
  dataVolumeCapacity: 1Gi
  enterpriseEdition: false
schema_registry:
  enabled: true
  tls:
    enabled: false
  resources:
    requests:
      cpu: 500m
      memory: 500Mi
    limits:
      cpu: 500m
      memory: 500Mi
  replicas: 1
  dataVolumeCapacity: 1Gi
  enterpriseEdition: false
kafka_connect:
  enabled: false
  tls:
    enabled: false
  resources:
    requests:
      cpu: 500m
      memory: 1500Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  replicas: 1
  dataVolumeCapacity: 1Gi
  enterpriseEdition: false
zookeeper:
  enabled: true
  tls:
    enabled: false
  resources:
    requests:
      cpu: 500m
      memory: 500Mi
    limits:
      cpu: 500m
      memory: 500Mi
  replicas: 1
  dataVolumeCapacity: 1Gi
  enterpriseEdition: false
zkClusterName: zk
kafkaClusterName: kafka



  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
